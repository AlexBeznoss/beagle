name: RubocopBrancher
on: pull_request

env:
  RAILS_ENV: test

jobs:
  brancher:
    name: Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install gems
        run: bundle install

      - name: Get Changed Files
        id: changed_files
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          TOKEN=${{ github.token }}
          API_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/files"

          echo "files="$(curl -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github.v3+json" -s $API_URL | jq -r '.[].filename' | tr '\n' ' ')"" >> $GITHUB_OUTPUT

      - name: Run linters
        id: linter
        run: |
          has_issues=$(bundle exec rubocop --fail-fast --force-exclusion --format=files ${{steps.changed_files.outputs.files}} > /dev/null 2>&1; echo $?)
          echo "has_issues="$has_issues"" >> $GITHUB_OUTPUT

          if [ "$has_issues" == "1"  ]; then
            set +e
            bundle exec rubocop --format=markdown --force-exclusion ${{steps.changed_files.outputs.files}} > rubocop-brancher.txt
            set -e
            bundle exec rubocop --autocorrect --force-exclusion ${{steps.changed_files.outputs.files}}
          fi

      - name: Extract branch name
        if: steps.linter.outputs.has_issues == '1'
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Close PR if redundant anymore
        if: steps.linter.outputs.has_issues == '0'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          pr_number=$(gh pr list -H ${{ steps.extract_branch.outputs.branch }}-rubocop_brancher --json number --jq '.[].number')
          if [ -n "$pr_number"  ]; then
            gh pr close -c "All issues in the main PR are fixed, so this one is redundant now :(" -d $pr_number
          fi

      - name: Create Pull Request
        id: create_pull
        if: steps.linter.outputs.has_issues == '1'
        uses: peter-evans/create-pull-request@v5
        with:
          title: "Autogenerated PR to fix rubocop issues in the PR #${{ github.event.pull_request.number }}"
          body-path: rubocop-brancher.txt
          base: ${{ steps.extract_branch.outputs.branch }}
          commit-message: "Fix rubocop issues by RubocopBrancher workflow"
          branch: ${{ steps.extract_branch.outputs.branch }}-rubocop_brancher
          delete-branch: true
      - name: Leave a comment
        uses: mshick/add-pr-comment@v2
        if: steps.linter.outputs.has_issues == '1'
        with:
          refresh-message-position: true
          allow-repeats: false
          message: |
            **HowdyâœŒï¸Ž**

            I have noticed, your PR has a few issues I can fix with Rubocop autofix. [So I prepared a PR for you.](${{ steps.create_pull.outputs.pull-request-url }})
            Feel free to merge it in or ignore it and it will be closed automagicallyðŸª„

